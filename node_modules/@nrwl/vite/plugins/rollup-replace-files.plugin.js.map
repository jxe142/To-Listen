{"version":3,"sources":["../../../../packages/vite/plugins/rollup-replace-files.plugin.ts"],"sourcesContent":["// source: https://github.com/Myrmod/vitejs-theming/blob/master/build-plugins/rollup/replace-files.js\n\nimport * as fs from 'fs';\nimport { resolve } from 'path';\n\n/**\n * @function replaceFiles\n * @param {FileReplacement[]} replacements\n * @return {({name: \"rollup-plugin-replace-files\", enforce: \"pre\", Promise<resolveId>})}\n */\nexport default function replaceFiles(replacements: FileReplacement[]) {\n  if (!replacements?.length) {\n    return null;\n  }\n  return {\n    name: 'rollup-plugin-replace-files',\n    enforce: 'pre',\n    async transform(code, id) {\n      /**\n       * The reason we're using endsWith here is because the resolved id\n       * will be the absolute path to the file. We want to check if the\n       * file ends with the file we're trying to replace, which will be essentially\n       * the path from the root of our workspace.\n       */\n\n      const foundReplace = replacements.find((replacement) =>\n        id.endsWith(replacement.replace)\n      );\n      if (foundReplace) {\n        console.info(\n          `replace \"${foundReplace.replace}\" with \"${foundReplace.with}\"`\n        );\n        try {\n          // return new file content\n          return fs\n            .readFileSync(id.replace(foundReplace.replace, foundReplace.with))\n            .toString();\n        } catch (err) {\n          console.error(err);\n          return code;\n        }\n      }\n      return code;\n    },\n  };\n}\n\nexport interface FileReplacement {\n  replace: string;\n  with: string;\n}\n"],"names":["replaceFiles","replacements","length","name","enforce","transform","code","id","foundReplace","find","replacement","endsWith","replace","console","info","with","fs","readFileSync","toString","err","error"],"mappings":"AAAA,qGAAqG;AAErG;+BAGA;;;;CAIC,GACD;;aAAwBA;;oBARJ;AAQL,SAASA,aAAaC,YAA+B,EAAE;IACpE,IAAI,CAACA,CAAAA,uBAAAA,KAAAA,IAAAA,aAAcC,MAAM,AAAD,GAAG;QACzB,OAAO,IAAI;IACb,CAAC;IACD,OAAO;QACLC,MAAM;QACNC,SAAS;QACT,MAAMC,WAAUC,IAAI,EAAEC,EAAE,EAAE;YACxB;;;;;OAKC,GAED,MAAMC,eAAeP,aAAaQ,IAAI,CAAC,CAACC,cACtCH,GAAGI,QAAQ,CAACD,YAAYE,OAAO;YAEjC,IAAIJ,cAAc;gBAChBK,QAAQC,IAAI,CACV,CAAC,SAAS,EAAEN,aAAaI,OAAO,CAAC,QAAQ,EAAEJ,aAAaO,IAAI,CAAC,CAAC,CAAC;gBAEjE,IAAI;oBACF,0BAA0B;oBAC1B,OAAOC,IACJC,YAAY,CAACV,GAAGK,OAAO,CAACJ,aAAaI,OAAO,EAAEJ,aAAaO,IAAI,GAC/DG,QAAQ;gBACb,EAAE,OAAOC,KAAK;oBACZN,QAAQO,KAAK,CAACD;oBACd,OAAOb;gBACT;YACF,CAAC;YACD,OAAOA;QACT;IACF;AACF"}