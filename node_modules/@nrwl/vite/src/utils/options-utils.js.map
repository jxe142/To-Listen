{"version":3,"sources":["../../../../../packages/vite/src/utils/options-utils.ts"],"sourcesContent":["import {\n  ExecutorContext,\n  joinPathFragments,\n  logger,\n  parseTargetString,\n  readTargetOptions,\n  Tree,\n} from '@nrwl/devkit';\nimport { existsSync } from 'fs';\nimport { join, relative } from 'path';\nimport {\n  BuildOptions,\n  InlineConfig,\n  mergeConfig,\n  searchForWorkspaceRoot,\n  ServerOptions,\n  UserConfig,\n} from 'vite';\nimport { ViteDevServerExecutorOptions } from '../executors/dev-server/schema';\nimport replaceFiles from '../../plugins/rollup-replace-files.plugin';\nimport { ViteBuildExecutorOptions } from '../executors/build/schema';\n\nexport async function getBuildAndSharedConfig(\n  options:\n    | (ViteDevServerExecutorOptions & ViteBuildExecutorOptions)\n    | ViteBuildExecutorOptions,\n  context: ExecutorContext\n): Promise<InlineConfig> {\n  const projectRoot = context.workspace.projects[context.projectName].root;\n\n  return mergeConfig({}, {\n    mode: options.mode,\n    root: projectRoot,\n    base: options.base,\n    configFile: normalizeViteConfigFilePath(projectRoot, options.configFile),\n    plugins: [replaceFiles(options.fileReplacements)],\n    build: getViteBuildOptions(\n      options as ViteDevServerExecutorOptions & ViteBuildExecutorOptions,\n      projectRoot\n    ),\n    optimizeDeps: { force: options.force },\n  } as InlineConfig);\n}\n\nexport function normalizeViteConfigFilePath(\n  projectRoot: string,\n  configFile?: string\n): string {\n  return configFile && existsSync(joinPathFragments(configFile))\n    ? configFile\n    : existsSync(joinPathFragments(`${projectRoot}/vite.config.ts`))\n    ? joinPathFragments(`${projectRoot}/vite.config.ts`)\n    : existsSync(joinPathFragments(`${projectRoot}/vite.config.js`))\n    ? joinPathFragments(`${projectRoot}/vite.config.js`)\n    : undefined;\n}\n\nexport function getServerOptions(\n  options: ViteDevServerExecutorOptions,\n  context: ExecutorContext\n): ServerOptions {\n  const projectRoot = context.workspace.projects[context.projectName].root;\n  let serverOptions: ServerOptions & UserConfig = {};\n  if (options.proxyConfig) {\n    const proxyConfigPath = options.proxyConfig\n      ? join(context.root, options.proxyConfig)\n      : join(projectRoot, 'proxy.conf.json');\n\n    if (existsSync(proxyConfigPath)) {\n      logger.info(`Loading proxy configuration from: ${proxyConfigPath}`);\n      serverOptions.proxy = require(proxyConfigPath);\n      serverOptions.fs = {\n        allow: [\n          searchForWorkspaceRoot(joinPathFragments(projectRoot)),\n          joinPathFragments(context.root, 'node_modules/vite'),\n        ],\n      };\n    }\n  }\n\n  serverOptions = {\n    ...serverOptions,\n    host: options.host,\n    port: options.port,\n    https: options.https,\n    hmr: options.hmr,\n    open: options.open,\n    cors: options.cors,\n    logLevel: options.logLevel,\n    clearScreen: options.clearScreen,\n  };\n\n  return serverOptions;\n}\n\nexport function getBuildTargetOptions(\n  buildTarget: string,\n  context: ExecutorContext\n) {\n  const target = parseTargetString(buildTarget);\n  return readTargetOptions(target, context);\n}\n\nexport function getViteBuildOptions(\n  options: ViteDevServerExecutorOptions & ViteBuildExecutorOptions,\n  projectRoot: string\n): BuildOptions {\n  let buildOptions: BuildOptions & UserConfig = {\n    outDir: relative(projectRoot, options.outputPath),\n    emptyOutDir: true,\n    reportCompressedSize: true,\n    cssCodeSplit: true,\n    target: 'esnext',\n    commonjsOptions: {\n      transformMixedEsModules: true,\n    },\n  };\n\n  buildOptions = {\n    ...buildOptions,\n    sourcemap: options.sourcemap,\n    minify: options.minify,\n    manifest: options.manifest,\n    ssrManifest: options.ssrManifest,\n    ssr: options.ssr,\n    logLevel: options.logLevel,\n  };\n\n  return buildOptions;\n}\n"],"names":["getBuildAndSharedConfig","normalizeViteConfigFilePath","getServerOptions","getBuildTargetOptions","getViteBuildOptions","options","context","projectRoot","workspace","projects","projectName","root","mergeConfig","mode","base","configFile","plugins","replaceFiles","fileReplacements","build","optimizeDeps","force","existsSync","joinPathFragments","undefined","serverOptions","proxyConfig","proxyConfigPath","join","logger","info","proxy","require","fs","allow","searchForWorkspaceRoot","host","port","https","hmr","open","cors","logLevel","clearScreen","buildTarget","target","parseTargetString","readTargetOptions","buildOptions","outDir","relative","outputPath","emptyOutDir","reportCompressedSize","cssCodeSplit","commonjsOptions","transformMixedEsModules","sourcemap","minify","manifest","ssrManifest","ssr"],"mappings":"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"}